type GMInfo {
  content: String
}

type PlayerInfo {
  content: String
  revealed: Boolean
}

type CreatedDates {
  ooc: AWSDate
  ic: AWSDate
}

type Tag @model @auth(rules: [{allow: public}]) @key(name: "byCampaign", fields: ["campaignID"]) {
  id: ID!
  label: String!
  TagArticles: [TagArticle] @connection(keyName: "byTag", fields: ["id"])
  campaignID: ID!
}

type Article @model @auth(rules: [{allow: public}]) @key(name: "byCampaign", fields: ["campaignId", "title"]) {
  id: ID!
  title: String!
  content: String
  createdDate: CreatedDates
  gmInfo: GMInfo
  playerInfo: PlayerInfo
  campaignId: ID!
  campaign: Campaign @connection(fields: ["campaignId"])
  tags: [TagArticle] @connection(keyName: "byArticle", fields: ["id"])
}

type Campaign @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  description: String
  gm: AWSEmail!
  articles: [Article] @connection(keyName: "byCampaign", fields: ["id"])
  Tags: [Tag] @connection(keyName: "byCampaign", fields: ["id"])
}

type TagArticle @model(queries: null) @key(name: "byTag", fields: ["tagID", "articleID"]) @key(name: "byArticle", fields: ["articleID", "tagID"]) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  tagID: ID!
  articleID: ID!
  tag: Tag! @connection(fields: ["tagID"])
  article: Article! @connection(fields: ["articleID"])
}
 